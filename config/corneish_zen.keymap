#include <behaviors.dtsi>

#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#define LTH LCTRL SPACE
#define RTH LMETA RET
#define LPK LSHIFT ESC

#define VOL_UP C_VOL_UP
#define VOL_DN C_VOL_DN
#define MUTE   C_MUTE

#define BRI_UP C_BRI_UP
#define E_BRI_UP LC(BRI_UP)
#define BRI_DN C_BRI_DN
#define E_BRI_DN LC(BRI_DN)

#define PLPA   C_PP
#define NEXT   C_NEXT
#define PREV   C_PREV

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1100
#define ZMK_POINTING_DEFAULT_SCRL_VAL 18

&mt {
  tapping-term-ms = <170>;
  quick-tap-ms = <200>;
};

&lt {
  tapping-term-ms = <170>;
  quick-tap-ms = <200>;
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";

    function_bluetooth_layer {
      if-layers = <1 2>;
      then-layer = <4>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      label = " ";
      bindings = <
        &none    &kp Q  &kp W  &kp E  &kp R   &kp T                      &kp Y   &kp U  &kp I    &kp O    &kp P     &none
        &none    &kp A  &kp S  &kp D  &kp F   &kp G                      &kp H   &kp J  &kp K    &kp L    &kp BSPC  &none
        &mt LPK  &kp Z  &kp X  &kp C  &kp V   &kp B                      &kp N   &kp M  &kp TAB  &kp DOT  &kp FSLH  &kp RSHFT
                                      &mo 3   &mo 1  &mt LTH    &mt RTH  &mo 2   &kp LALT
      >;
    };

    lower_layer {
      bindings = <
        &none  &none  &kp N2    &kp PLUS  &kp N4    &kp N6                   &none     &kp COLON  &kp TILDE  &kp SEMI  &none   &none
        &none  &kp N0 &kp UNDER &kp MINUS &kp EQUAL &kp N8                   &kp PIPE  &kp LPAR   &kp LBKT   &kp LBRC  &kp LT  &none
        &none  &kp N1 &kp N3    &kp N5    &kp N7    &kp N9                   &none     &kp RPAR   &kp RBKT   &kp RBRC  &kp GT  &none
                                          &mo 3     &mo 1   &mt LTH &mt RTH  &mo 2     &kp LALT
      >;
    };

    raise_layer {
      bindings = <
        &none  &none     &kp AT    &kp HASH &kp PRCNT &none                   &kp HOME   &kp AMPS   &kp ASTRK  &kp CARET  &none     &none
        &none  &kp EXCL  &kp GRAVE &kp DQT  &kp SQT   &kp DLLR                &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp DEL   &none
        &none  &kp QMARK &none     &none    &none     &none                   &kp END    &kp PG_DN  &kp PG_UP  &kp COMMA  &kp BSLH  &none
                                            &mo 3     &mo 1  &mt LTH &mt RTH  &mo 2      &kp LALT
      >;
    };

    opt_layer {
      bindings = <
        &none      &kp BRI_DN  &kp E_BRI_DN &none    &kp E_BRI_UP &kp BRI_UP                   &none          &none           &none        &none           &kp LS(LG(N3)) &none
        &none      &kp BT_PRV  &kp VOL_DN   &kp MUTE &kp VOL_UP   &bt BT_NXT                   &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_UP &mmv MOVE_RIGHT &kp LS(LG(N4)) &none
        &bt BT_CLR &none       &kp PREV     &kp PLPA &kp NEXT     &out OUT_TOG                 &msc SCRL_LEFT &msc SCRL_DOWN  &msc SCRL_UP &msc SCRL_RIGHT &kp LS(LG(N5)) &none
                                                     &mo 3        &mo 1   &mt LTH  &mkp LCLK   &mkp MCLK      &mkp RCLK
      >;
    };

    f_key_layer {
      bindings = <
        &none  &none   &kp F2   &none   &kp F4    &kp F6                  &none  &none  &none  &none  &none  &none
        &none  &none   &kp F10  &kp F11 &kp F12   &kp F8                  &none  &none  &none  &none  &none  &none
        &none  &kp F1  &kp F3   &kp F5  &kp F7    &kp F9                  &none  &none  &none  &none  &none  &none
                                        &none     &none   &none    &none  &none  &none
      >;
    };
  };
};
